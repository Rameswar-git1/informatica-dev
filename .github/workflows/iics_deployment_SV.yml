name: Promote Dev to UAT

on:
  workflow_dispatch:
    inputs:
      committed_sha:
        description: "Hash to deploy"
        required: true
        type: string

env:
  COMMIT_HASH: ${{ github.event.inputs.committed_sha }}
  IICS_LOGIN_URL: https://dm-us.informaticacloud.com
  IICS_POD_URL: https://usw5.dm-us.informaticacloud.com/saas
  IICS_USERNAME: ${{ secrets.IICS_USERNAME }}
  IICS_PASSWORD: ${{ secrets.IICS_PASSWORD }}
  UAT_IICS_USERNAME: ${{ secrets.UAT_IICS_USERNAME }}
  UAT_IICS_PASSWORD: ${{ secrets.UAT_IICS_PASSWORD }}

jobs:
  dev_build:
    name: Review Development Code
    runs-on: ubuntu-latest
    environment: development
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout Code from Dev
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login to development
        run: python ./scripts/infa_login.py

      - name: Test Committed Mapping Tasks
        run: python ./scripts/infa_get_updates.py

  promote_to_uat:
    name: Complete UAT Promotion
    runs-on: ubuntu-latest
    environment: QA
    needs: dev_build
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      # Checkout the UAT repository (informatica_qa)
      - name: Checkout UAT Repository
        uses: actions/checkout@v3
        with:
          repository: Rameswar-git1/informatica_qa
          ref: main
          token: ${{ github.token }}
          path: IICS-CDP-CICD-demo
          fetch-depth: 0

      - name: Checkout Promotion Pipeline Scripts
        uses: actions/checkout@v3
        with:
          path: iics-promotion-pipeline
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Python Requirements
        run: pip install requests

      - name: Set Git User Identity and Default Repo
        run: |
          git config --global user.name "Brandon Bir"
          git config --global user.email "bbird@informatica.com"
          gh repo set-default Rameswar-git1/informatica_qa

      - name: Configure GitHub Token for Authentication
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ -d "IICS-CDP-CICD-demo/.git" ]; then
            cd IICS-CDP-CICD-demo
            git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/Rameswar-git1/informatica_qa.git
          else
            echo "❌ Directory IICS-CDP-CICD-demo is not a Git repository"
            exit 1
          fi

          # Explicitly set the remote to the UAT repository
          # git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/Rameswar-git1/informatica_qa.git

      - name: Add Dev Remote and Cherry-pick Commit
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
         if [ -d "IICS-CDP-CICD-demo/.git" ]; then
            cd IICS-CDP-CICD-demo
            git remote add dev https://x-access-token:${GH_TOKEN}@github.com/Rameswar-git1/informatica-dev.git || true
            git fetch dev main --unshallow || git fetch dev main
      
            if git cat-file -e dev/${COMMIT_HASH} 2>/dev/null; then
              echo "✅ Found commit ${COMMIT_HASH} in dev remote."
            else
              echo "❌ Commit ${COMMIT_HASH} not found in dev remote." && exit 1
            fi
      
            if git ls-remote --exit-code --heads origin qa; then
              git checkout qa
            else
              git checkout -b qa origin/main
              git push origin qa
            fi
      
            git cherry-pick --strategy=recursive -X theirs ${COMMIT_HASH}
            git push origin HEAD:qa
          else
            echo "❌ Directory IICS-CDP-CICD-demo is not a Git repository"
            exit 1
          fi


      - name: Get Latest Changes to UAT
        run: |
          cd IICS-CDP-CICD-demo
          echo "UAT_COMMIT_HASH=$(git log -1 --pretty=format:%H)" >> $GITHUB_ENV

      - name: Login to UAT
        run: python ./iics-promotion-pipeline/scripts/infa_login.py

      - name: Sync and Test UAT Deployment
        run: python ./iics-promotion-pipeline/scripts/infa_update_and_test.py
